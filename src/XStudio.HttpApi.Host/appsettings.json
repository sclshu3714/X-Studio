{
  "App": {
    //Development 开发; Staging 预发布; Production 生产;
    "Environment": "Development",
    "DBMode": "MYSQL", // "DM"
    "SelfUrl": "https://localhost:44345",
    "ClientUrl": "http://localhost:44345",
    "CorsOrigins": "https://*.XStudio.com,https://localhost:44345,http://localhost:4200,https://localhost:44355",
    "RedirectAllowedUrls": "https://localhost:44345,https://localhost:4200"
  },
  "ConnectionStrings": {
    "Default": "Server=172.30.103.227;Port=3306;Database=XStudio;User Id=root;Password=wxz@123456",
    "Dmdbms": "Server=172.30.103.227;Port=5236;Database=XStudio;User Id=SYSDBA;Password=SYSDBA001"
  },
  "AuthServer": {
    "Authority": "https://localhost:44345",
    "RequireHttpsMetadata": false,
    "SwaggerClientId": "XStudio_Swagger"
  },
  "StringEncryption": {
    "DefaultPassPhrase": "ZnN89HwypWw0LphB"
  },
  //日志配置-不需要修改
  "Serilog": {
    "Using": [ "Serilog.Sinks.File" ], // 添加此行以确保使用文件输出
    "WriteTo": [
      {
        "Name": "RollingFile",
        "Args": {
          "pathFormat": "Logs//{Date}.txt",
          "RestrictedToMinimumLevel": "Warning",
          "outputTemplate": "[{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz}] [{Level}] \n{Message}{NewLine}",
          "rollingInterval": "Day"
        }
      },
      {
        "Name": "Console"
      }
    ],
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Information",
        "System": "Information"
      }
    }
  },

  //秘钥
  "Jwt": {
    "Key": "ZnN89HwypWw0LphB"
  },

  "Nacos": {
    //
    // 摘要:如果实例是短暂的。默认值为true。
    //     If instance is ephemeral.The default value is true.
    "Ephemeral": true,

    //
    // 摘要:
    //     the ip of this instance
    "Ip": "",

    //
    // 摘要:
    //     the port of this instance
    "Port": 44345,

    //
    // 摘要:您的服务是否为https服务。
    //     whether your service is a https service.
    "Secure": false,

    //
    // 摘要:
    //     the name of the cluster.
    //
    // 值:
    //     The name of the cluster.
    "ClusterName": "DEFAULT",

    //
    // 摘要:
    //     default namespace
    "Namespace": "dev",

    //
    // 摘要:
    //     the name of the group.
    "GroupName": "DEFAULT_GROUP",

    //
    // 摘要:
    //     the DataId of the group.
    "DataId": "xstudio.json",

    //
    // 摘要:
    //     the weight of this instance.
    //     这个实例的权重。
    "Weight": "100.0",

    //
    // 摘要:
    //     the name of the service.
    "ServiceName": "XStudio",

    //
    // 摘要 string
    //      用户名
    "UserName": "nacos",

    //
    // 摘要 string
    //      密码
    "Password": "wxz@123456",

    //
    // 摘要: string
    //     accessKey
    "AccessKey": "",

    //
    // 摘要:string
    //     secretKey
    "SecretKey": "",

    //
    // 摘要 string
    //
    "RamRoleName": "",

    //
    // 摘要:
    //  ContextPath
    "ContextPath": "nacos",

    //
    // 摘要:
    //     EndPoint
    "EndPoint": "",

    //
    // 摘要:
    //     default timeout, unit is Milliseconds.
    "DefaultTimeOut": 15000,

    //
    // 摘要:
    //     监听配置文件.
    "Listeners": [
      {
        "Optional": false,
        "DataId": "xstudio.json",
        "Group": "DEFAULT_GROUP"
      }
    ],

    //
    // 摘要: int
    //     listen interval, unit is millisecond.
    "ListenInterval": 1000,

    //
    // 摘要:
    //     nacos server addresses.
    "ServerAddresses": [
      //"http://127.0.0.1:8848/"
      //"http://10.20.4.186:8848/"
      "http://172.30.103.227:8848"
    ],

    //
    // 摘要:
    //     Select an IP that matches the prefix as the service registration IP like the
    //     config of spring.cloud.inetutils.preferred-networks
    //     选择与前缀匹配的IP作为服务注册IP，如spring.cloud.inetutils.preferred-networks的配置
    "PreferredNetworks": "",

    //
    // 摘要 bool
    //
    "ConfigUseRpc": true,


    //
    // 摘要 bool
    //
    "NamingUseRpc": true,


    //
    // 摘要 string
    //
    "NamingLoadCacheAtStart": "",

    //
    // 摘要 string
    //
    "NamingCacheRegistryDir": "",

    //
    // 摘要:bool
    //     Whether enable protecting naming push empty data, default is false.
    //     是否启用保护命名推送空数据，默认为false。
    "NamingPushEmptyProtection": false,

    //
    // 摘要: List<string>
    //     Specify the assemblies that contains the impl of IConfigFilter.
    "ConfigFilterAssemblies": [ "XStudio" ],

    //
    // 摘要: string
    //     Specify some extension info of IConfigFilter.
    "ConfigFilterExtInfo": "",

    //
    // 摘要:
    //     if you just want to subscribe, but don't want to register your service, set it
    //     to false.
    "RegisterEnabled": true,


    //
    // 摘要:
    //     the metadata of this instance
    "Metadata": {
      "HttpsPort": 44345
    },


    //
    // 摘要:
    //     If instance is enabled to accept request. The default value is true.
    "InstanceEnabled": true
  },

  "Kafka": {
    "Connections": {
      "Default": {
        "BootstrapServers": "172.30.103.227:9092",
        "SaslUsername": null,
        "SaslPassword": null,
        "SocketTimeoutMs": 60000
      },
      "SecondConnection": {
        "BootstrapServers": "172.30.103.227:9092"
      }
    },
    "EventBus": {
      "GroupId": "xstudio",
      "TopicName": "ISMG_XSTUDIO_TEST",
      "ConnectionName": "xstudio" // "Default"
    }
  },

  // 限制接口访问速率 限制配置 包含了全局速率限制的设置
  "IpRateLimiting": {
    // 启用|关闭 端点的速率限制
    "EnableEndpointRateLimiting": true,
    // 如果设置为true，被限制的请求会被放入一个等待队列中，而不是直接返回429状态码。
    // 这里设置为false，意味着超出限制的请求将直接收到429 Too Many Requests的响应。
    "StackBlockedRequests": false,
    // 用于确定客户端的真实IP地址的HTTP头。这在代理或负载均衡器后面使用时很有用， 用于识别真实的客户端IP和客户端ID。。
    "RealIpHeader": "X-Real-IP",
    // 用于识别客户端的HTTP头。这可以用来区分不同的客户端或用户, 用于识别真实的客户端IP和客户端ID。。
    "ClientIdHeader": "X-ClientId",
    // 当请求超出限制时返回的HTTP状态码。429表示Too Many Requests，即请求过多。
    "HttpStatusCode": 429,
    // 包含一组通用规则，用于定义限制条件。
    "GeneralRules": [
      {
        // 规则应用于所有端点
        "Endpoint": "*",
        // 限制的时间周期为1秒
        "Period": "1s",
        // 在上述时间周期内，每个客户端可以发出的最大请求数为3
        "Limit": 3
      }
    ],
    // 不受速率限制的客户端IP列表
    "ClientWhitelist": [
      //"192.168.1.1",
      //"192.168.1.2"
    ],
    // 不受速率限制的端点列表
    "EndpointWhitelist": [
      //"/api/healthcheck"
    ],
    //不受速率限制的IP地址列表
    "IpWhitelist": [
      "127.0.0.1",
      "10.10.0.60",
      "10.10.1.15",
      "192.168.137.1"
    ]
  },
  //特定策略的设置
  "IpRateLimitPolicies": {
    // 策略列表，每个策略可以定义不同的端点、时间段和限制
    "PolicyEntries": [
      {
        // 指定策略应用的API端点。这可以是一个具体的API路径，如api/products，或者使用通配符来匹配多个端点，如api/*。
        "Endpoint": "api/endpoint1",
        // 定义限制的时间周期。这个值可以是1s（1秒）、1m（1分钟）、1h（1小时）等
        "Period": "1s",
        // 在指定的Period内允许的最大请求数。例如，如果Limit设置为5，Period设置为1m，则用户在1分钟内最多可以向该端点发送5个请求
        "Limit": 5
      },
      {
        "Endpoint": "api/endpoint2",
        "Period": "1h",
        "Limit": 100
      }
    ]
  }
}
